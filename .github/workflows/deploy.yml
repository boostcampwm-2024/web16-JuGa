name: deploy

on:
  push:
    branches: [main, alpha]
  pull_request:
    branches: [main, alpha]

env:
  DOCKER_IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/juga-docker
  DOCKER_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./BE/package-lock.json

      - name: Create .env file
        run: |
          touch ./BE/.env
          echo "${{ secrets.ENV }}" > ./BE/.env

      - name: Install dependencies
        working-directory: ./BE
        run: npm ci

      - name: Run tests
        working-directory: ./BE
        run: npm test
        env:
          CI: true

      - name: Run linter
        working-directory: ./BE
        run: npm run lint

      - name: Build application
        working-directory: ./BE
        run: npm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        working-directory: ./BE
        env:
          NCP_ACCESS_KEY: ${{ secrets.NCP_ACCESS_KEY }}
          NCP_SECRET_KEY: ${{ secrets.NCP_SECRET_KEY }}
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} .
          docker tag ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} ${{ env.DOCKER_IMAGE }}:latest

          docker push ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          docker push ${{ env.DOCKER_IMAGE }}:latest

      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Setting NCP CLI & Credentials
        run: |
          cd ~
          wget https://www.ncloud.com/api/support/download/5/65
          unzip 65
          mkdir ~/.ncloud
          echo -e "[DEFAULT]\nncloud_access_key_id = ${{ secrets.NCP_ACCESS_KEY }}\nncloud_secret_access_key = ${{ secrets.NCP_SECRET_KEY }}\nncloud_api_url = ${{ secrets.NCP_API_URI }}" >> ~/.ncloud/configure

      - name: Add Github Action Ip to Security group
        run: |
          cd ~
          ls -la
          chmod -R 777 ~/cli_linux
          cd ~/cli_linux
          ./ncloud vserver addAccessControlGroupInboundRule --regionCode KR --vpcNo ${{ secrets.NCP_VPC_ID }} --accessControlGroupNo ${{ secrets.NCP_ACG_ID }} --accessControlGroupRuleList "protocolTypeCode='TCP', ipBlock='${{ steps.ip.outputs.ipv4 }}/32', portRange='${{ secrets.SSH_PORT }}'"

      - name: Deploy to NCP Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_SERVER_HOST }}
          username: ${{ secrets.NCP_SERVER_USERNAME }}
          key: ${{ secrets.NCP_SERVER_SSH_KEY }}
          port: 22
          script: |
            docker pull ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
            docker stop juga-docker || true
            docker rm juga-docker || true
            docker run -d \
              --name juga-docker \
              -p 3000:3000 \
              ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

      - name: Remove Github Action Ip to Security group
        run: |
          chmod -R 777 ~/cli_linux
          cd ~/cli_linux
          ./ncloud vserver removeAccessControlGroupInboundRule --regionCode KR --vpcNo ${{ secrets.NCP_VPC_ID }} --accessControlGroupNo ${{ secrets.NCP_ACG_ID }} --accessControlGroupRuleList "protocolTypeCode='TCP', ipBlock='${{ steps.ip.outputs.ipv4 }}/32', portRange='${{ secrets.SSH_PORT }}'"
